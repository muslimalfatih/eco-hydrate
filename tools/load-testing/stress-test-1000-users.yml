config:
  target: 'http://localhost'
  phases:
    # Warm up
    - duration: 30
      arrivalRate: 10
      name: "Warmup"
    
    # Ramp to 1000 concurrent users
    - duration: 120
      arrivalRate: 50
      rampTo: 167  # ~1000 concurrent users
      name: "Ramp to 1000 users"
    
    # Sustain 1000 users for 5 minutes
    - duration: 300
      arrivalRate: 167
      name: "Sustain 1000 concurrent users"
    
    # Cool down
    - duration: 60
      arrivalRate: 167
      rampTo: 5
      name: "Cool down"

  # SLA Requirements
  ensure:
    maxErrorRate: 0        # 0% error rate
    p95: 200              # 95% under 200ms
    p99: 300              # 99% under 300ms
    maxResponseTime: 500  # Hard limit 500ms

  processor: "./stress-functions.js"

scenarios:
  # Real user journey simulation
  - name: "E-commerce User Journey"
    weight: 70
    flow:
      # Homepage with A/B testing
      - get:
          url: "/"
          headers:
            User-Agent: "Artillery LoadTest {{ $randomString() }}"
          capture:
            - header: "X-Cache" 
              as: "cacheHit"
          expect:
            - statusCode: 200
            - maxResponseTime: 200

      # Browse products (cached)
      - get:
          url: "/api/products?limit=12&page={{ $randomInt(1,5) }}"
          expect:
            - statusCode: 200
            - maxResponseTime: 150
            - hasHeader: "X-Cache"

      # View product detail
      - get:
          url: "/api/products/{{ generateProductId() }}"
          ifTrue: "{{ $randomBoolean(0.8) }}"

      # Track analytics
      - post:
          url: "/api/analytics/track"
          json:
            event: "product_viewed"
            variant: "{{ $randomString() }}"
            sessionId: "{{ $uuid }}"
          expect:
            - statusCode: [200, 201]
            - maxResponseTime: 100

      # Place order (25% conversion rate)
      - post:
          url: "/api/orders"
          ifTrue: "{{ $randomBoolean(0.25) }}"
          json:
            customerName: "Load Test {{ $randomInt(1,10000) }}"
            customerEmail: "test{{ $randomInt(1,10000) }}@loadtest.com"
            productName: "Eco-Hydrate Classic"
            quantity: "{{ $randomInt(1,3) }}"
            unitPrice: 29.99
            shippingAddress: "123 Test St, Test City 12345"
          expect:
            - statusCode: [200, 201]
            - maxResponseTime: 300

  # API stress testing
  - name: "API Endpoints Stress"
    weight: 30
    flow:
      # Metrics endpoint
      - get:
          url: "/api/metrics"
          expect:
            - statusCode: 200
            - maxResponseTime: 100

      # Health check
      - get:
          url: "/api/health"
          expect:
            - statusCode: 200
            - maxResponseTime: 50
